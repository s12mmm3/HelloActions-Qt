name: Build and package Qt project with OpenSSL on Windows

on: [push, pull_request]

jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        include:
          # 5.15.2
          - qt_ver: 5.15.2
            qt_arch: win32_msvc2019
            msvc_arch: x86
          - qt_ver: 5.15.2
            qt_arch: win64_msvc2019_64
            msvc_arch: x64
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: ${{ matrix.qt_ver }}
          arch: ${{ matrix.qt_arch }}
          cache: 'true'

      - name: Install Perl
        uses: shogo82148/actions-setup-perl@v1
        with:
          perl-version: 5.32

      - name: Download OpenSSL source code
        run: |
          curl -O https://www.openssl.org/source/openssl-3.1.2.tar.gz
          tar xzf openssl-3.1.2.tar.gz

      - name: Build OpenSSL
        working-directory: openssl-3.1.2
        shell: cmd
        run: |
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" ${{ matrix.msvc_arch }}
          
          perl Configure no-asm --prefix=${{ github.workspace }}\openssl no-shared no-tests
          nmake
          nmake install

      - name: Set OpenSSL path
        run: |
          echo "OPENSSL_DIR=${{ github.workspace }}\openssl" >> $GITHUB_ENV

      - name: Configure CMake project
        run: |
          cmake -B build -DOPENSSL_ROOT_DIR="${{ env.OPENSSL_DIR }}" -DOPENSSL_USE_STATIC_LIBS=TRUE

      - name: Build CMake project
        run: |
          cmake --build build --config Release

      - name: Package CMake project
        run: |
          cmake --install build --config Release --prefix package

      - name: Upload package as artifact
        uses: actions/upload-artifact@v2
        with:
          name: package-${{ matrix.qt_ver }}-${{ matrix.qt_arch }}
          path: package

